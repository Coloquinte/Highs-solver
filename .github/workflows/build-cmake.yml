name: build-cmake

on: [push, pull_request]

jobs:
  build-cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build-type: [Release, Debug]
        fast-build: [ON, OFF]
        int64: [ON, OFF]

    steps:
      - uses: actions/checkout@v4

      - name: Setup ccache
        if: ${{ matrix.os != 'windows-latest' }}
        uses: hendrikmuhs/ccache-action@v1.2

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE \
            ${{ matrix.os != 'windows-latest' && '-DCMAKE_CXX_COMPILER_LAUNCHER=ccache' || '' }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DFAST_BUILD=${{ matrix.fast-build }} -DHIGHSINT64=${{ matrix.int64 }}

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: |
          cmake --build . --parallel --config ${{ matrix.build-type }}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        shell: bash
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest --parallel 2 --timeout 300 --output-on-failure -C ${{ matrix.build-type }}
